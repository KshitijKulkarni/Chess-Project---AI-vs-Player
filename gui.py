# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GameScreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        #set the background color of the window to black
        MainWindow.setStyleSheet("background-color: #16161a;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(4, 10, 791, 81))
        font = QtGui.QFont()
        font.setFamily("Nunito Black")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(290, 230, 221, 101))
        font = QtGui.QFont()
        font.setFamily("Nunito Black")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: rgb(197, 216, 199);\n"
"}\n"
"")
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(290, 340, 221, 101))
        font = QtGui.QFont()
        font.setFamily("Nunito Black")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: rgb(255, 190, 127);\n"
"}\n"
"")
        self.pushButton_2.setFlat(False)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 60, 801, 81))
        font = QtGui.QFont()
        font.setFamily("Nunito Black")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#ff7a88;\">Hold up!</span></p><p align=\"center\"><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Confirm Move"))
        self.pushButton_2.setText(_translate("MainWindow", "Adjust"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#ffffff;\">White plays first...</span></p></body></html>"))


player = 1
def SetPlayer(val):
    global ui, player
    player = val
    _translate = QtCore.QCoreApplication.translate
    if player == 1:#Ai's turn
        ui.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#ff7a88;\">Hold up!</span></p><p align=\"center\"><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>"))
        ui.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#ffffff;\">Hands off the board until the Ai finishes playing.</span></p></body></html>"))
    elif player == 2:#Human's turn
        ui.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#7aff81;\">Your Turn</span></p><p align=\"center\"><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>"))
        ui.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#ffffff;\">Play and confirm the move</span></p></body></html>"))

def NewMatch():
    print("New match started")

def Start(skill):
    global Game_Manager
    # print("Starting with skill: " + str(skill))
    import time
    time.sleep(5)
    import Game_Manager
    Game_Manager.Start(skill)
    SetPlayer(2)

InvalidMove = False;

def CheckMateScreen():
    global ui
    MainWindow.setStyleSheet("background-color: #ff7a88;")
    ui.label.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#16161a;\">Checkmate!</span></p><p align=\"center\"T><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>")
    ui.label_2.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#16161a;\">Play again?</span></p></body></html>")
    #change nthe button color to red
    ui.pushButton.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: #7aff81;\n"
"    background-color: #16161a;\n"
"}\n"
"")
    #set its text to "Play Again"
    ui.pushButton.setText("Play Again")
    #cinnect it to hthe function PlayAgain
    ui.pushButton.clicked.disconnect(ConfirmMove)
    ui.pushButton.clicked.connect(NewMatch)

    ui.pushButton_2.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: #ff7a88;\n"
"    background-color: #16161a;\n"
"}\n"
"")
    ui.pushButton_2.setText("Quit")
    ui.pushButton_2.clicked.disconnect(RetakeReferenceFrame)
    ui.pushButton_2.clicked.connect(lambda: sys.exit())

def CheckScreen():
    global ui
    MainWindow.setStyleSheet("background-color: #fcb63c;")
    ui.label.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#16161a;\">Check!</span></p><p align=\"center\"T><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>")
    ui.label_2.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#16161a;\">Play again?</span></p></body></html>")
    #change nthe button color to red
    ui.pushButton.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: #7aff81;\n"
"    background-color: #16161a;\n"
"}\n"
"")
    ui.pushButton_2.setStyleSheet("QPushButton {\n"
"    font-size: 18pt;\n"
"    font-weight: light;\n"
"    color: #ff7a88;\n"
"    background-color: #16161a;\n"
"}\n"
"")

def ResetScreen():
    global ui
    MainWindow.setStyleSheet("background-color: #16161a;")

def ConfirmMove():
    global Game_Manager, InvalidMove
    SetPlayer(1)
    error = Game_Manager.OnUserPlayed()#play the move and record error code
    ResetScreen()
    print(error)
    if(error == 1):#invalid move
        ui.label.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#ff7a88;\">Invalid Move!</span></p><p align=\"center\"><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>")
        ui.label_2.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#ffffff;\">Undo the move and tap on 'Adjust'</span></p></body></html>")
        InvalidMove = True;
    elif error == 0:
        SetPlayer(2)
    elif error == 2: #On Checkmate
        CheckMateScreen()
    elif error == 3:
        CheckScreen()
    #Write the game's state to the file
    # Game_Manager.WriteToFile()


def RetakeReferenceFrame():
    global Game_Manager, InvalidMove
    Game_Manager.ReTakePicture()
    if(InvalidMove):
        InvalidMove = False;
        ui.label.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:36pt; color:#7aff81;\">Your Turn</span></p><p align=\"center\"><span style=\" color:#c6ffd1;\"><br/></span></p></body></html>")
        ui.label_2.setText("<html><head/><body><p align=\"center\"><span style=\" font-size:18pt; color:#ffffff;\">Play and confirm the move</span></p></body></html>")

def CloseEvent(event):
    global Game_Manager
    print("Closed")
    print(event)
    Game_Manager.Close()

import sys
app = QtWidgets.QApplication(sys.argv)  
MainWindow = QtWidgets.QMainWindow()
ui = Ui_MainWindow()
ui.setupUi(MainWindow)

ui.pushButton.clicked.connect(ConfirmMove)
ui.pushButton_2.clicked.connect(RetakeReferenceFrame)
#Show fullscreen window
MainWindow.showFullScreen()

#When close button is pressed, close the game
MainWindow.closeEvent = CloseEvent

# Start(1)
